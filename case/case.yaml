swagger: '2.0'
x-asee-visibility: internal
host: bankapi.net
basePath: /v1/case
info:
  description: Case API is used to register customer cases and access information on their status and resolution.
  title: Case API
  version: v1
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Cases
    description: Working with customer cases
  - name: Callback requests
    description: Working with callback requests
  - name: Complaints
    description: Working with complaints
  - name: Service requests
    description: Working with service requests
  - name: Classifications
    description: Working with classifications
paths:
  /me/cases:
    get:
      summary: List service cases for authenticated customer
      description: Response containslist of cases that match criteria
      operationId: Cases_GetListForCustomer
      parameters:
        - $ref: '#/parameters/case-topic-param'
        - $ref: "#/parameters/statuses-param"
        - $ref: '#/parameters/kinds-param'
        - $ref: "#/parameters/page-param"
        - $ref: "#/parameters/page-size-param"
        - $ref: "#/parameters/sort-by-param"
        - $ref: "#/parameters/sort-order-param"
        - $ref: "#/parameters/trim-param"
        - $ref: "#/parameters/include-param"
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/case-list'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Cases
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable
  /cases:
    get:
      summary: List customer service cases
      description: Response containslist of cases that match criteria
      operationId: Cases_GetList
      parameters:
        - $ref: '#/parameters/case-topic-param'
        - $ref: "#/parameters/statuses-param"
        - $ref: '#/parameters/kinds-param'
        - $ref: "#/parameters/customer-number-param"
        - $ref: "#/parameters/page-param"
        - $ref: "#/parameters/page-size-param"
        - $ref: "#/parameters/sort-by-param"
        - $ref: "#/parameters/sort-order-param"
        - $ref: "#/parameters/trim-param"
        - $ref: "#/parameters/include-param"
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/case-list'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Cases
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable

  /cases/{case-number}:
    get:
      summary: Get details of specific case
      description: Response contains case details such as registration date current status state and the name of the agent responsible for handling the case
      operationId: Cases_Get
      parameters:
        - $ref: '#/parameters/case-number-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/case'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Cases
      x-asee-tags:
        - Shapeable

  /cases/{case-number}/attachments:
    post:
      summary: Attach documents to case
      description: Attaches document to specified case
      operationId: Cases_AttachDocuments
      parameters:
        - $ref: '#/parameters/case-number-param'
        - name: cmd
          description: Comand with details of attached documents
          in: body
          schema:
            $ref: '#/definitions/attach-documents-command'
      responses:
        '204':
          description: No content
        default:
          $ref: '#/responses/default-error-response'
        '400':
          description: |
            Your request was well not well constructed. Look into validation error in response for more details.
          schema:
            $ref: '#/definitions/validation-problem'
        '440':
          description: |
            Your request was well constructed but it does not comply with business policy. Consider the following possible problems and look into response for more details:

              - [not-allowed-in-status](case-problems.html)
      tags:
        - Cases

  /cases/complaints:
    post:
      summary: Register new customer complaint
      description: Records customer complaint and returns assigned case number
      operationId: Complaints_Register
      parameters:
        - description: Command with new complaint
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/register-complaint-command'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/resource-created-result'
          headers:
            Location:
              type: string
              description: The URL where newly recorded case can be accessed
        400:
          $ref: '#/responses/validation-problem-response'
        440:
          description: |
            Your request was well constructed but it could not be processed. Consider the following possible problems and look into response for more details:

            | Problem | Description |
            |-|-|
            | [unknown-arrangement](case-problems.html) | Unknown arrangement |
          schema:
            $ref: '#/definitions/business-problem'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Complaints

  /cases/service-requests:
    post:
      summary: Register new customer service request
      description: Records new customer service request and returns assigned case number
      operationId: ServiceRequests_Register
      parameters:
        - description: Command with new service request
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/register-service-request-command'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/resource-created-result'
          headers:
            Location:
              type: string
              description: The URL where newly recorded case can be accessed
        400:
          $ref: '#/responses/validation-problem-response'
        440:
          description: |
            Your request was well constructed but it could not be processed. Consider the following possible problems and look into response for more details:

            | Problem | Description |
            |-|-|
            | [unknown-arrangement](case-problems.html) | Unknown arrangement |
          schema:
            $ref: '#/definitions/business-problem'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Service requests

  /cases/callback-requests:
    post:
      summary: Register new request for callback
      description: Records callback request and returns assigned case number
      operationId: CallbackRequests_Register
      parameters:
        - description: 'Command with new callback request'
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/register-callback-request-command'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/resource-created-result'
          headers:
            Location:
              type: string
              description: The URL where newly recorded case can be accessed
        400:
          $ref: '#/responses/validation-problem-response'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Callback requests

  /classifications:
    get:
      summary: List all classification schemas used by the API
      description: Some fields and parameters have been restricted to a list of allowed lookup values maintained by the bank. This method lists all schemas used in this API.
      operationId: "Classifications_GetList"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/classification-list'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Classifications

  /classifications/{schema-id}:
    get:
      summary: List values allowed by given classification schema.
      description: Returns all classification values for chosen classification.
      operationId: Classifications_Get
      parameters:
        - $ref: '#/parameters/schema-id-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/classification'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Classifications

parameters:
  case-number-param:
    description: Unique identifier of customer case
    in: path
    name: case-number
    required: true
    type: string


  case-topic-param:
    description: |
      Topic of the customer's request.
      For complete list of possible values see [case-topics](case-classifications.html#case-topics) classification.
    in: query
    name: case-topic
    required: false
    type: string
    x-asee-classification: case-topics

  customer-number-param:
    description: Unique identifier of the customer.
    in: query
    name: customer-number
    required: false
    type: string

  statuses-param:
    name: statuses
    description: |
      Case statuses to filter the result. If empty or not present cases having any status are returned
      For complete list of possible values see [case-statuses](case-classifications.html#case-statuses) enumeration.
    type: array
    collectionFormat: csv
    in: query
    items:
      type: string
      enum: [accepted, active, rejected, canceled, resolved, closed]
      x-asee-enumeration: case-statuses
  kinds-param:
    name: kinds
    description: |
      Case kinds to filter the results. If empty or not present all kinds of cases are returned
      For complete list of possible values see [case-kinds](case-classifications.html#case-kinds) enumeration.
    type: array
    collectionFormat: csv
    in: query
    items:
      type: string
      enum:
        - complaint
        - service-request
        - callback-request
      x-asee-enumeration: case-kinds
  schema-id-param:
    name: schema-id
    description: Identifier of classification schema
    in: path
    required: true
    type: string
  page-param:
    name: page
    in: query
    description: Page index. For more information see general guidance on [paging](common-getstarted.html#paging)
    type: integer
    default: 1
    x-asee-common: true
  page-size-param:
    name: page-size
    in: query
    description: Number of items on a page. For more information see general guidance on [paging](common-getstarted.html#paging)
    required: false
    type: integer
    default: 10
    x-asee-common: true
  sort-order-param:
    description: Sort order (`asc` or `desc`). Default is asc. For more information see general guidance on [sorting](common-getstarted.html#sorting)
    in: query
    name: sort-order
    type: string
    default: asc
    enum:
    - asc
    - desc
    x-asee-common: true
  sort-by-param:
    description: Attribute of the collection item to sort by. For more information see general guidance on [sorting](common-getstarted.html#sorting)
    in: query
    name: sort-by
    type: string
    x-asee-common: true
  include-param:
    description: List of fields to include in response. For more information see general guidance on [response shaping](common-getstarted.html#shaping)
    in: query
    name: include
    type: array
    items:
      type: string
    collectionFormat: csv
    x-asee-common: true
  trim-param:
    description: List of fields to trim from response. For more information see general guidance on [response shaping](common-getstarted.html#shaping)
    in: query
    name: trim
    type: array
    items:
      type: string
    collectionFormat: csv
    x-asee-common: true
definitions:
  case-list:
    description: Paged list of customer cases.
    allOf:
    - $ref: '#/definitions/paged-list'
    properties:
      items:
        description: List of customer cases.
        items:
          $ref: '#/definitions/case'
        type: array
    type: object

  case:
    description: Common information to all kinds of customer cases
    discriminator: kind
    required:
    - kind
    properties:
      case-number:
        description: Unique identifier of customer case workitem
        type: string
      kind:
        description: |
          Enumeration that distinguishes different kinds of cases
          For a list of possible values see [case-kinds](case-classifications.html#case-kinds) enumeration.
        type: string
        enum: [complaint, service-request, callback-request]
        x-asee-enumeration: case-kinds
      status:
        description: |
          Status of the case
          For a list of possible values see [case-statuses](case-classifications.html#case-statuses) enumeration.
        type: string
        enum: [accepted, active, rejected, canceled, resolved, closed]
        x-asee-enumeration: case-statuses
        readOnly: true
      case-topic:
        description: |
          Type of the customer's request.
          For complete list of possible values see [case-topics](case-classifications.html#case-topics) classification.
        type: string
        x-asee-classification: case-topics
      title:
        description: Title of the case
        type: string
      details:
        description: Details about the case
        type: string
      arrangement-number:
        description: Arrangement number to which the case is related
        type: string
      customer-number:
        description: Unique identifier of customer that is linked to the case
        type: string
      customer-name:
        description: Name of the customer that is linked to the case
        type: string
      channel:
        description: |
          Communication channel through which case was received
          For a list of possible values see [case-channels](case-classifications.html#case-channels) enumeration.
        enum:
          - email
          - face-to-face
          - fax
          - phone
          - mail
          - other-communication-technology
          - web-app
          - mobile-app
        type: string
        x-asee-enumeration: case-channels
      resolution:
        description: Resolution of the case
        type: string
      importance:
        description: |
          The level of importance
          For a list of possible values see [case-importances](case-classifications.html#case-importances) enumeration.
        enum: [low, medium, high]
        type: string
        x-asee-enumeration: case-importances
      created:
        description: Date and time when case was recorded in the system
        format: date-time
        type: string
        readOnly: true
      status-changed:
        description: Date and time when case status changed
        format: date-time
        type: string
        readOnly: true
      last-modified:
        description: Date and time when case was last modified
        format: date-time
        type: string
        readOnly: true
      attachments:
        type: array
        items:
          $ref: '#/definitions/attachment'

  attach-documents-command:
    description: Command with specification of attached documents
    properties:
      documents:
        type: array
        items:
          $ref: '#/definitions/attachment'

  attachment:
    description: Details of document attachement
    properties:
      attachment-url:
        type: string
        format: url
        description: URL of document content in DMS
      attachment-id:
        type: string
        description: Unique identifier of document in DMS
      document-type:
        type: string
        x-asee-classification: document-kinds
        description: |
          Specific purpose of this document.
          For complete list of possible values see [document-kinds](offer-classifications.html#document-kinds) classification.


  register-callback-request-command:
    description: Registers callback for customer
    properties:
      callback-time:
        description: Preffered callback time set by customer
        format: date-time
        type: string
      category:
        description: |
          Category of callback request.
          For a complete list of possible values see [callback-categories](case-classifications.html#callback-categories) classification.
        type: string
        x-asee-classification: callback-categories
      customer-number:
        description: Unique identifier of the customer that requested callback
        type: string

  callback-request:
    allOf:
      - $ref: '#/definitions/case'
    description: Request by customer to be called by bank representative
    properties:
      callback-time:
        description: Preffered callback time set by customer
        format: date-time
        type: string
      category:
        description: |
          Category of callback request.
          For a complete list of possible values see [callback-categories](case-classifications.html#callback-categories) classification.
        type: string
        x-asee-classification: callback-categories

  register-complaint-command:
    description: Registers new customr complaint
    properties:
      case-id:
        description: Unique case identifier
        type: string
      customer-number:
        description: Unique identifier of the client.
        type: string
      importance:
        description: |
          Level of importance.
          For a list of possible values see [complaint-importances](case-classifications.html#complaint-importances) enumeration.
        enum:
          - low
          - standard
          - very-important
        type: string
        x-asee-enumeration: complaint-importances
      details:
        description: Details about the case.
        type: string
      arrangement-number:
        description: Arrangement number to which the case is related.
        type: string
      title:
        description: Reason of the related communication.
        type: string
      reply-address:
        description: Address for sending the reply to the customer
        type: string
      reply-address-code:
        description: Address code for sending the reply to the customer
        type: string
      case-topic:
        description: |
          Type of the customer's request.
          For complete list of possible values see [case-topics](case-classifications.html#case-topics) classification.
        type: string
        x-asee-classification: case-topics
      related-case-id:
        description: Unique indetifier of related case.
        type: string

  complaint:
    allOf:
      - $ref: '#/definitions/case'
    description: Issue causing customer's dissatisfaction with bank
    properties:
      reply-address:
        description: Address for sending the reply to the customer
        type: string
      reply-address-code:
        description: Address code for sending the reply to the customer
        type: string
      related-case-id:
        description: Unique indetifier of related case.
        type: string

  register-service-request-command:
    description: Creates a new service request
    properties:
      case-number:
        description: Unique case identifier
        type: string
      customer-number:
        description: Unique identifier of the customer that asks for service
        type: string
      importance:
        description: |
          Level of importance
          For a list of possible values see [service-request-importances](case-classifications.html#service-request-importances) enumeration.
        enum:
          - low
          - medium
          - high
        type: string
        x-asee-enumeration: service-request-importances
      details:
        description: Details about the case
        type: string
      arrangement-number:
        description: Arrangement number to which the case is related
        type: string
      title:
        description: Reason of the related communication
        type: string

  service-request:
    allOf:
      - $ref: '#/definitions/case'
    description: "Request for service that requires bank's assistance"



  resource-created-result:
    description: Unique identifier of newly created resource that can be used in future inquires and commands
    properties:
      id:
        type: string
        description: identifier
    example:
      id: WI00012123



  validation-problem:
    type: array
    items:
      type: object
      properties:
        field:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
    example:
      -
        field: phone-number
        errors:
          -
            error: invalid-format
            message: Format for this field is invalid
          -
            error: max-length
            message: Content exceeds maximum alowed length
      -
        field: account-number
        errors:
          -
            error: check-digit-invalid
            message: Check digit is invalid for this field

  business-problem:
    description: Details on specific problem that prevented processing after successfull validation
    type: object
    properties:
      problem:
        description: Unique literal that identifies specific problem
        type: string
      message:
        description: Message explaining the situation and optionaly remedies
        type: string
      details:
        description: Optional details supplied for troubleshooting
        type: string
    example:
      problem: document-locked
      message: Document you are trying to access is locked by another user
      details: User john.doe has locked the document

  paged-list:
    description: List with support for paging
    properties:
      total-count:
        description: Total number of items in collection
        type: integer
      page-size:
        description: Size of the page
        type: integer
      page:
        description: Index of current page
        type: integer
      total-pages:
        description: Total number of pages of set size
        type: integer
      sort-order:
        description: Sort order (`asc` or `desc`). Default is asc
        type: string
        enum:
        - asc
        - desc
      sort-by:
        description: Attribute of the collection item to sort by
        type: string
  classification-value:
    type: object
    description: Classification value
    properties:
      literal:
        description: Literal that uniquely identifies classification value
        type: string
      code:
        description: Optional numerical code of classification value
        type: string
      description:
        description: Description of classification value
        type: string
      parent-literal:
        description: Optional literal of parent classification value if schema is hierarchical
        type: string
    example:
      literal: billing
      code: 2
      description: Contact may be used to provide party with details of their liabilities to the bank

  classification-list:
    description: List of classification schemas
    type: object
    properties:
      items:
        description: List of classification schemas
        items:
          $ref: "#/definitions/classification-info"
        type: array
    example:
      -
        schema-id: filing-purpose
        name: Filing Purpose
        description: List of possible uses of document in business context. Commonly used filing purposes are document, customer-picture
      -
        schema-id: folder-purpose
        name: Folder Purpose
        description: List of possible uses of a folder in business context.

  classification-info:
    description: Basic information on classification schema
    properties:
      schema-id:
        type: string
        description: Unique literal that identifies the classification schema. Always in `lowercase-dash` convention.
      name:
        type: string
        description: User friendly name of classification
      description:
        type: string
        description: Description of a classification
    example:
      schema-id: filing-purpose
      name: Filing Purpose
      description: List of possible uses of document in business context. Commonly used filing purposes are document, customer-picture

  classification:
    type: object
    description: Classification schema details
    properties:
      schema-id:
        type: string
        description: Unique literal that identifies the classification schema. Always in `lowercase-dash` convention.
      name:
        type: string
        description: User friendly name of classification
      description:
        type: string
        description: Description of a classification
      values:
        description: List of allowed classification values
        type: array
        items:
          $ref: "#/definitions/classification-value"
    example:
      schema-id: contact-purpose
      name: Contact Purpose
      description: List of possible uses of contact in business context. Commonly used filing purposes are billing, marketing
      values:
        - literal: billing
          code: 1
          description: Contact may be used to provide party with details of their liabilities to the bank
        - literal: marketing
          code: 2
          description: Contact may be used to provide party with details of offers
        - literal: reporting
          code: 3
          description: Contact may be used to provide party with reports on their account
responses:
  validation-problem-response:
    description: Your request was not constructed properly. Response contains the list of validation errors for each invalid element of your request. For complete list of possible validation errors see [validation errors](common-getstarted.html#error-handling).
    schema:
      $ref: '#/definitions/validation-problem'
  default-error-response:
    description: Besides specific status codes above, other standard http [status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) can be returned for each request. To learn more see general guidance on [error handling](common-getstarted.html#error-handling)
