swagger: '2.0'
x-asee-visibility: internal
host: bankapi.net
basePath: /v1/case
info:
  description: |
    Case API is used to register, list and record actions on customer cases.
    You can register a customer case, get case details, files an history, search through registered customer cases and close them when they are resolved.
  title: Case API
  version: v1
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Cases
    description: Working with customer cases
  - name: Callback requests
    description: Working with callback requests
  - name: Complaints
    description: Working with complaints
  - name: Service requests
    description: Working with service requests
  - name: Classifications
    description: Working with classifications
paths:
  /cases:
    get:
      consumes: []
      deprecated: false
      operationId: Cases_GetList
      parameters:
        - $ref: '#/parameters/case-type-param'
        - $ref: '#/parameters/case-topic-param'
        - $ref: '#/parameters/customer-number-param'
        - $ref: '#/parameters/agent-id-param'
        - $ref: '#/parameters/date-from-param'
        - $ref: '#/parameters/date-to-param'
        - $ref: '#/parameters/state-param'
        - $ref: '#/parameters/query-param'
        - $ref: '#/parameters/page-size-param'
        - $ref: '#/parameters/page-param'
        - $ref: '#/parameters/sort-order-param'
        - $ref: '#/parameters/sort-by-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/case-list'
        default:
          $ref: '#/responses/default-error-response'
      summary: Operation returns list of cases with basic details like registration date current lifecycle state and the name and id of the agent responsible for handling the case. When used without optional parameters all active cases are returned.
      tags:
        - Cases
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable
  '/cases/{case-id}':
    get:
      deprecated: false
      operationId: Cases_Get
      parameters:
        - $ref: '#/parameters/case-id-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/customer-case'
        default:
          $ref: '#/responses/default-error-response'
      summary: Operation returns specific case details.
      tags:
        - Cases
      x-asee-tags:
        - Shapeable
  '/cases/{case-id}/status':
    put:
      deprecated: false
      operationId: Cases_Update
      parameters:
        - $ref: '#/parameters/case-id-param'
        - description: 'Info about the update (Resolution, State)'
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/update-case-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: Operation updates the specified case progress. Operation returns customer case with updated status.
      tags:
        - Cases
  '/cases/{case-id}/history':
    get:
      deprecated: false
      operationId: Cases_GetHistory
      parameters:
        - $ref: '#/parameters/case-id-param'
        - $ref: '#/parameters/page-size-param'
        - $ref: '#/parameters/page-param'
        - $ref: '#/parameters/sort-order-param'
        - $ref: '#/parameters/sort-by-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/case-history'
        default:
          $ref: '#/responses/default-error-response'
      summary: Operation returns list of file details associated with the specific case.
      tags:
        - Cases
      x-asee-tags:
        - Pageable
        - Sortable
  /callback-requests:
    post:
      deprecated: false
      operationId: CallbackRequests_Create
      parameters:
        - description: 'Command contains parameters for creating callback request.'
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/create-callback-request-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: Add Callback Request
      tags:
        - Callback requests
  /complaints:
    post:
      deprecated: false
      operationId: Complaints_Create
      parameters:
        - description: Command contains parameters for creating new complaint.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/create-complaint-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: Operation opens new customer complaint. Operation returns complaint with assigned case identifier.
      tags:
        - Complaints
  /service-requests:
    post:
      deprecated: false
      operationId: ServiceRequests_Create
      parameters:
        - description: Command contains parameters for creating new service request.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/create-service-request-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: Operation opens new customer service request. Operation returns service-request with assigned case identifier.
      tags:
        - Service requests
  '/cases/{case-id}/attachments':
    post:
      deprecated: false
      operationId: Cases_AddAttachment
      parameters:
        - $ref: '#/parameters/case-id-param'
        - description: Id and Name of the document to be attached
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/add-case-attachment-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: Operation attaches document/file to the existing Case
      tags:
        - Cases
  '/cases/{case-id}/close':
    post:
      deprecated: false
      operationId: Cases_Close
      parameters:
        - $ref: '#/parameters/case-id-param'
        - description: Info about closing the case (Resolution)
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/close-case-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: Operation closes the specified case and returns closed case id.
      tags:
        - Cases
  '/cases/{case-id}/attachments/{file-id}':
    delete:
      deprecated: false
      operationId: Cases_RemoveAttachment
      parameters:
        - $ref: '#/parameters/case-id-param'
        - $ref: '#/parameters/file-id-param'
      responses:
        '204':
          description: No content
        default:
          $ref: '#/responses/default-error-response'
      summary: Operation removes attaced file from case.
      tags:
        - Cases
  '/classifications':
    get:
      description: Returns all classification schemas used in this API.
      operationId: "Classifications_GetList"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/classification-list'
        default:
          $ref: '#/responses/default-error-response'
      summary: Returns all classification schemas used in this API.
      tags:
        - Classifications
      x-asee-tags: []
  '/classifications/{schema-id}':
    get:
      description: Returns all classification values for chosen classification.
      operationId: Classifications_Get
      parameters:
        - $ref: '#/parameters/schema-id-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/classification'
        default:
          $ref: '#/responses/default-error-response'
      summary: Returns the classification values for provided schema.
      tags:
        - Classifications
      x-asee-tags: []
parameters:
  case-id-param:
    description: Unique identifier of customer case.
    in: path
    name: case-id
    required: true
    type: string
  file-id-param:
    description: Unique identifier of attachment.
    in: path
    name: file-id
    required: true
    type: string
  case-type-param:
    description: Type of customer case to be retrieved.
    in: query
    name: case-type
    required: false
    enum:
      - complaint
      - service-request
      - callback-request
    type: string
  case-topic-param:
    description: Topic of the customer's request. For complete list of possible values see [case-topic]() classification.
    in: query
    name: case-topic
    required: false
    type: string
  customer-number-param:
    description: Unique identifier of the customer.
    in: query
    name: customer-number
    required: false
    type: string
  agent-id-param:
    description: Unique identifier of the agent that opens the case.
    in: query
    name: agent-id
    required: false
    type: string
  date-from-param:
    description: Filters items that have been registered after specified date.
    in: query
    name: date-from
    required: false
    format: date-time
    type: string
  date-to-param:
    description: Filters items that have been registered before specified date.
    in: query
    name: date-to
    required: false
    format: date-time
    type: string
  state-param:
    description: States
    in: query
    name: states
    required: false
    enum:
      - active
      - resolved
      - canceled
      - closed
      - accepted
    type: string
  query-param:
    description: Search text for title and details of customer cases.
    in: query
    name: query
    required: false
    type: string
  page-size-param:
    description: 'Number of items on a page. For more information see general guidance on [paging and sorting]().'
    in: query
    name: page-size
    required: false
    format: int32
    type: integer
  page-param:
    description: 'Page index. For more information see general guidance on [paging and sorting]().'
    in: query
    name: page
    required: false
    format: int32
    type: integer
  sort-order-param:
    description: 'Sort order (`asc` or `desc`). Default is asc. For more information see general guidance on [paging and sorting]()'
    in: query
    name: sort-order
    required: false
    enum:
      - asc
      - desc
    type: string
  sort-by-param:
    description: 'Attribute of the collection item to sort by. For more information see general guidance on [paging and sorting]().'
    in: query
    name: sort-by
    required: false
    type: string
  include-param:
    description: 'List of fields to include in response. For more information see general guidance on [response shaping]()'
    in: query
    name: include
    required: false
    collectionFormat: csv
    items:
      type: string
    type: array
  trim-param:
    description: 'List of fields to trim from response. For more information see general guidance on [response shaping]()'
    in: query
    name: trim
    required: false
    collectionFormat: csv
    items:
      type: string
    type: array
  schema-id-param:
    description: Schema id
    in: path
    name: schema-id
    required: true
    type: string
definitions:
  case-list:
    description: Paged list of customer cases.
    allOf:
    - $ref: '#/definitions/paged-list'
    properties:
      items:
        description: List of customer cases.
        items:
          $ref: '#/definitions/customer-case'
        type: array
    type: object
  customer-case:
    description: Contains details of customer case.
    properties:
      case-id:
        description: Unique identifier of customer case.
        type: string
      case-topic:
        description: Type of the customer's request. For complete list of possible values see [case-topic]() classification.
        type: string
      case-type:
        description: Type of the case object.
        enum:
          - complaint
          - service-request
          - callback-request
        type: string
      registered-by-party-number:
        description: Unique identifier of the party that creates the case.
        type: string
      registered-by-party-name:
        description: Name of the party that opens the case.
        type: string
      updated-by-party-number:
        description: Unique identifier of the party that changed the case.
        type: string
      updated-by-party-name:
        description: Name of the party that changed the case.
        type: string
      customer-number:
        description: Unique identifier of the client.
        type: string
      customer-name:
        description: Name of the client that is linked to the case.
        type: string
      registration-date:
        description: Date of opening.
        format: date-time
        type: string
      state:
        description: State of the case.
        enum:
          - active
          - resolved
          - canceled
          - closed
          - accepted
        type: string
      resolution:
        description: Resolution of the case.
        type: string
      importance:
        description: The level of imporance.
        enum:
          - low
          - standard
          - very-important
        type: string
      title:
        description: Title of the case.
        type: string
      details:
        description: Details about the case.
        type: string
      arrangement-number:
        description: Arrangement number to which the case is related.
        type: string
      attachments:
        description: Associated case files.
        items:
          $ref: '#/definitions/attachment'
        type: array
    type: object
  attachment:
    description: Reference to file associated with customer case.
    properties:
      attachment-id:
        description: Unique identifier of attachment.
        type: string
      attachment-name:
        description: Meta name of the attachment.
        type: string
      attachment-uri:
        description: URI
        type: string
    type: object
  update-case-command:
    description: Updates resolution and state of some case.
    properties:
      resolution:
        description: Resolution of the case.
        type: string
      state:
        description: Current state of the case.
        enum:
          - resolved
          - closed
          - rejected
        type: string
    type: object
  command-result:
    description: The result of the executed command.
    properties:
      id:
        description: 'Returns the identifier of created, updated or deleted object.'
        type: string
      created-record-status:
        description: 'Status of the object (created, updated, deleted).'
        type: string
    type: object
  case-history:
    description: Provides the history of customer case processing.
    allOf:
    - $ref: '#/definitions/paged-list'
    properties:
      items:
        description: List of history entries for the case.
        items:
          $ref: '#/definitions/case-history-item'
        type: array
    type: object
  case-history-item:
    description: Customer case history item
    properties:
      case-id:
        description: Unique identifier of customer case
        type: string
      case-type:
        description: Type of customer case.
        enum:
          - complaint
          - service-request
          - callback-request
        type: string
      updated-by-party-number:
        description: Identifier of the party that changed the case.
        type: string
      updated-by-party-name:
        description: Name of the party that changed the case.
        type: string
      customer-number:
        description: Unique identifier of the client.
        type: string
      registration-date:
        description: Date of case registration.
        format: date-time
        type: string
      state:
        description: State of the case.
        enum:
          - active
          - resolved
          - canceled
          - closed
          - accepted
        type: string
      resolution:
        description: Resolution of the case.
        type: string
      importance:
        description: The level of imporance.
        enum:
          - low
          - standard
          - very-important
        type: string
      details:
        description: Details about the case.
        type: string
      arrangement-number:
        description: Arrangement number to which the case is related
        type: string
      version-number:
        description: Change version
        type: string
      version-date:
        description: Version date
        format: date-time
        type: string
    type: object
  create-callback-request-command:
    description: Creates customer case for callback.
    properties:
      callback-request-time:
        description: Callback request time
        format: date-time
        type: string
      category:
        description: 'Category of callback request. For a complete list of possible values see [callback-category]() classification.'
        type: string
      customer-number:
        description: Unique identifier of the client.
        type: string
    type: object
  create-complaint-command:
    description: Creates new complaint
    properties:
      case-id:
        description: Unique case identifier
        type: string
      customer-number:
        description: Unique identifier of the client.
        type: string
      importance:
        description: Level of importance.
        enum:
          - low
          - standard
          - very-important
        type: string
      details:
        description: Details about the case.
        type: string
      arrangement-number:
        description: Arrangement number to which the case is related.
        type: string
      title:
        description: Reason of the related communication.
        type: string
      reply-address:
        description: Address for sending the reply to the customer.
        type: string
      reply-address-code:
        description: Address code for sending the reply to the customer.
        type: string
      communication-channel:
        description: Communication channel through which case was received.
        enum:
          - email
          - face-to-face-meeting
          - sms
          - wap
          - fax
          - instant-message
          - phone
          - mail
          - other-communication-technology
          - web
        type: string
      case-topic:
        description: Type of the customer's request. For complete list of possible values see [case-topic]() classification.
        type: string
      related-case-id:
        description: Unique indetifier of related case.
        type: string
    type: object
  create-service-request-command:
    description: Creates a new service request
    properties:
      case-id:
        description: Unique case identifier
        type: string
      customer-number:
        description: Unique identifier of the client.
        type: string
      importance:
        description: Level of importance.
        enum:
          - low
          - standard
          - very-important
        type: string
      details:
        description: Details about the case.
        type: string
      arrangement-number:
        description: Arrangement number to which the case is related.
        type: string
      title:
        description: Reason of the related communication.
        type: string
      reply-address:
        description: Address for sending the reply to the customer.
        type: string
      reply-address-code:
        description: Address code for sending the reply to the customer.
        type: string
      communication-channel:
        description: Communication channel through which case was received.
        enum:
          - email
          - face-to-face-meeting
          - sms
          - wap
          - fax
          - instant-message
          - phone
          - mail
          - other-communication-technology
          - web
        type: string
      case-topic:
        description: Type of the customer's request. For complete list of possible values see [case-topic]() classification.
        type: string
      related-case-id:
        description: Unique indetifier of related case.
        type: string
    type: object
  add-case-attachment-command:
    description: Adds attachment to customer case.
    properties:
      case-id:
        description: Unique identifier of customer case.
        type: string
      file-id:
        description: Unique identifier of the attachment.
        type: string
      file-name:
        description: Name of the attached document.
        type: string
      customer-number:
        description: Unique identifier of the client.
        type: string
    type: object
  close-case-command:
    description: Closes the customer case.
    properties:
      resolution:
        description: Resolution of the closed case.
        type: string
    type: object
  paged-list:
    description: List with support for paging
    properties:
      total-count:
        description: Total number of items in collection
        type: integer
      page-size:
        description: Size of the page
        type: integer
      page:
        description: Index of current page
        type: integer
      total-pages:
        description: Total number of pages of set size
        type: integer
      sort-order:
        description: Sort order (`asc` or `desc`). Default is asc
        type: string
        enum:
        - asc
        - desc
      sort-by:
        description: Attribute of the collection item to sort by
        type: string
  classification-value:
    description: Classification value
    example: TO DO
    properties:
      code:
        description: Code of classification value.
        type: string
      literal:
        description: Literal.
        type: string
      description:
        description: Description.
        type: string
      id:
        description: Identifier of classification value.
        type: string
      parent-id:
        description: Parent classification value id.
        type: string
      ordinal:
        description: Ordinal number.
        type: string
    type: object
  classification-list:
    description: List of classification shemas.
    properties:
      items:
        description: List of all classification schemas.
        items:
          $ref: "#/definitions/classification"
        type: array
    type: object
  classification:
    description: Classification schema used in API contracts.
    example:
      API: TO DO
      description: TO DO
      schema-id: TO DO
      name: TO DO
      values:
        - code: '0'
          literal: card-lost
          description: Card lost and new one should be issued.
          id:
          parent-id:
          ordinal:
        - code: '1'
          literal: card-stolen
          description: Card stollen and new one should be issued.
          id:
          parent-id:
          ordinal:
        - code: '2'
          literal: card-damadged
          description: Card damadged and new one should be issued.
          id:
          parent-id:
          ordinal:
        - code: '3'
          literal: emboss-name-changing
          description: Change emboss name.
          id:
          parent-id:
          ordinal:
        - code: '4'
          literal: pin-lost
          description: PIN code lost and new one should be created.
          id:
          parent-id:
          ordinal:
    properties:
      API:
        description: Name of Api in which classification shema is used.
        type: string
      description:
        description: Shema description.
        type: string
      schema-id:
        description: Unique identifier of the classification.
        type: string
      name:
        description: Name of shema.
        type: string
      values:
        description: List of classification values.
        items:
          $ref: "#/definitions/classification-value"
        type: array
    type: object
responses:
  default-error-response:
    description: Besides specific status codes above, other standard http [status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) can be returned for each request. To learn more see general guidance on [error handling]()
