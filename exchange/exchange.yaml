swagger: '2.0'
x-asee-visibility: public
info:
  description: Exchange API provides endpoints to initiate and track currency exchange orders, get one-time tailored offers for specific exchange deals and get latest and historic exchange rates and lists for reference and calculations.
  title: Exchange API
  version: v1
  contact:
    name: Nikola Stojanovic
    url: https://bankapi.net/docs/public/exchange-getstarted.html
    email: nikola.stojanovic@asseco-see.rs
host: bankapi.net
basePath: /v1/exchange
schemes:
  - https
  - http
tags:
  - description: Working with exchange rate lists
    name: Lists
  - description: Working with exchange rates
    name: Rates
  - description: Working with currency exchange orders
    name: Orders
  - description: Working with currency exchange offers
    name: Offers
  - description: Working with classifications
    name: Classifications
consumes:
  - application/json
produces:
  - application/json
paths:
  '/lists':
    get:
      summary: Get published lists that match criteria
      description: Response contains basic information on published lists that match criteria specified in parameters. Note that lists do not contain details such as currencies and rates.
      operationId: ExchangeRateLists_GetList
      tags:
        - Lists
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable
      parameters:
        - name: list-kinds
          description: "Literal that uniquely identifies intended usage of exchange rate list. Common values are `cash`, `forex`. For a complete list of values see classification [exchange-list-kind](exchange-classifications.html#exchange-list-kind)"
          type: array
          in: query
          items:
            type: string
          collectionFormat: csv
        - $ref: '#/parameters/from-date-param'
        - $ref: '#/parameters/to-date-param'
        - $ref: '#/parameters/page-size-param'
        - $ref: '#/parameters/page-param'
        - $ref: '#/parameters/sort-order-param'
        - $ref: '#/parameters/sort-by-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/exchange-rate-lists'
        default:
          $ref: '#/responses/default-error-response'
  '/lists/{list-kind}/latest':
    get:
      summary: Get latest list of exchange rates
      description: Response contains latest published list of specific kind
      operationId: ExchangeRateLists_GetLatest
      tags:
        - Lists
      x-asee-tags:
        - Shapeable
      parameters:
        - name: list-kind
          description: "Literal that uniquely identifies intended usage of exchange rate list. Common values are `cash`, `forex`. For a complete list of values see classification [exchange-rate-list-kind](exchange-classifications.html#exchange-rate-list-kind)"
          type: string
          in: path
          required: true
          x-asee-classification: list-kinds
        - $ref: '#/parameters/currencies-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/exchange-rate-list'
        default:
          $ref: '#/responses/default-error-response'
  '/lists/{list-kind}/{date}':
    get:
      summary: Get latest list for specific date
      description: Response contains latest list for specified date.
      operationId: ExchangeRateLists_GetForDate
      tags:
        - Lists
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable
      parameters:
        - name: list-kind
          description: "Literal that uniquely identifies intended usage of exchange rate list. Common values are `cash`, `forex`. For a complete list of values see classification [exchange-list-kind](exchange-classifications.html#exchange-list-kind)"
          type: string
          in: path
          required: true
          x-asee-classification: exchange-rate-list-kind
        - $ref: '#/parameters/date-param'
        - $ref: '#/parameters/currencies-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/exchange-rate-list'
        default:
          $ref: '#/responses/default-error-response'

  '/rates':
    get:
      summary: Get exchange rates that match criteria
      description: Response contains the list of rate records that can be filtered by period, currencies of interest, kind of list where they were published. Default sort order is by effective date descending so that latest rates come on top.
      operationId: ExchangeRates_GetList
      parameters:
        - $ref: '#/parameters/list-kinds-param'
        - $ref: '#/parameters/from-date-param'
        - $ref: '#/parameters/to-date-param'
        - $ref: '#/parameters/currencies-param'
        - $ref: '#/parameters/page-size-param'
        - $ref: '#/parameters/page-param'
        - $ref: '#/parameters/sort-order-param'
        - $ref: '#/parameters/sort-by-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/rate-list'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Rates
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable
  '/offers':
    post:
      summary: Request new currency exchange offer
      description: Customer asks for bank's offer to buy or to sell foreign currency. Response contains one-time offer that takes into account exchanged amount and customer standing at the bank.
      operationId: ExchangeOffers_Request
      tags:
        - Offers
      x-asee-tags: []
      parameters:
        - description: Offer request with details of currency exchange deal
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/request-offer-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/offer'
        '440':
          description: |
            Your request was well constructed but it does not comply with business policy. Consider the following possible problems and look into response for more details:

            - [night-exchange-closed]()
          schema:
            $ref: '#/definitions/business-problem'
        default:
          $ref: '#/responses/default-error-response'
  '/offers/{offer-id}':
    get:
      summary: Get details of specific offer
      description: Response contains one-time offer that takes into account exchanged amount and customer standing at the bank.
      operationId: ExchangeOffers_Get
      tags:
        - Offers
      x-asee-tags: []
      parameters:
        - description: Unique identifier of offer deal
          type: string
          in: path
          name: offer-id
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/offer'
        default:
          $ref: '#/responses/default-error-response'
  '/orders':
    get:
      summary: List currency exchange orders
      description: |
        Shows all transactions related to currencies exchanges from one account to all others.
        It is useful when it is required to view this kind of transactions for chosen time interval.
      operationId: ExchangeOrders_GetList
      tags:
        - Orders
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable
      parameters:
        - $ref: '#/parameters/customer-id-param'
        - $ref: '#/parameters/statuses-param'
        - $ref: '#/parameters/from-date-param'
        - $ref: '#/parameters/to-date-param'
        - $ref: '#/parameters/from-amount-param'
        - $ref: '#/parameters/to-amount-param'
        - $ref: '#/parameters/currencies-param'
        - $ref: '#/parameters/directions-param'
        - $ref: '#/parameters/page-size-param'
        - $ref: '#/parameters/page-param'
        - $ref: '#/parameters/sort-order-param'
        - $ref: '#/parameters/sort-by-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/exchange-order-list'
        default:
          $ref: '#/responses/default-error-response'
    post:
      summary: 'Initiate new currency exchange order'
      description: It is step in process of executing currency echange transaction.
      operationId: ExchangeOrders_Initiate
      tags:
        - Orders
      x-asee-tags: []
      parameters:
        - description: Initiate order command
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/initiate-order-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/resource-created-result'
        '440':
          description: |
            Your request was well constructed but it does not comply with business policy. Consider the following possible problems and look into response for more details:

            - [source-account-check-failed](exchange-problems.html)
            - [destination-account-check-failed](exchange-problems.html)
            - [amount-limit-exceeded](exchange-problems.html)
            - [account-type-not-appropriate](exchange-problems.html)
            - [insufficient-balance](exchange-problems.html)
            - [frequency-limit-exceeded](exchange-problems.html)
            - [temporary-unavailable](exchange-problems.html)
            - [night-exchange-closed](exchange-problems.html)
          schema:
            $ref: '#/definitions/business-problem'
        default:
          $ref: '#/responses/default-error-response'

  '/orders/{order-id}':
    get:
      summary: Get details of specific currency exchange order
      tags:
        - Orders
      x-asee-tags:
        - Shapeable
      description: Response contains all available details of specific exchange order.
      operationId: ExchangeOrders_Get
      parameters:
        - $ref: '#/parameters/order-id-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/exchange-order'
        default:
          $ref: '#/responses/default-error-response'

  '/orders/validate':
    post:
      summary: Validate currency exchange transaction.
      description: "Check all necesery validations and business policy rules, before execute transaction. If some rule is violated, transaction is canceled with info about occured problem."
      operationId: ExchangeOrders_Validate
      tags:
        - Orders
      x-asee-tags: []
      parameters:
        - description: Validate currency exchange transaction command.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/validate-order-request'
      responses:
        204:
          description: No content - order is valid
        400:
          $ref: '#/responses/validation-problem-response'
        default:
          $ref: '#/responses/default-error-response'
# ****************************************************#
# ENDPOINTS COMMON WITH OTHER APIs                    #
# ****************************************************#

  /classifications:
    get:
      summary: List all classification schemas used by the API
      description: Some fields and parameters have been restricted to a list of allowed lookup values maintained by the bank. This method lists all schemas used in this API.
      operationId: "Classifications_GetList"
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/classification-list'
        default:
          $ref: '#/responses/default-error-response'
      tags:
        - Classifications

  /classifications/{schema-id}:
    get:
      summary: List values allowed by given classification schema.
      description: Returns all classification values for chosen classification.
      operationId: Classifications_Get
      parameters:
        - $ref: '#/parameters/schema-id-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/classification'
        default:
          $ref: '#/responses/default-error-response'

      tags:
        - Classifications
parameters:
  schema-id-param:
    name: schema-id
    description: Identifier of classification schema
    in: path
    required: true
    type: string
  page-param:
    name: page
    in: query
    description: Page index. For more information see general guidance on [paging](common-getstarted.html#paging)
    type: integer
    default: 1
    x-asee-common: true
  page-size-param:
    name: page-size
    in: query
    description: Number of items on a page. For more information see general guidance on [paging](common-getstarted.html#paging)
    required: false
    type: integer
    default: 10
    x-asee-common: true
  sort-order-param:
    description: Sort order (`asc` or `desc`). Default is asc. For more information see general guidance on [sorting](common-getstarted.html#sorting)
    in: query
    name: sort-order
    type: string
    default: asc
    enum:
    - asc
    - desc
    x-asee-common: true
  sort-by-param:
    description: Attribute of the collection item to sort by. For more information see general guidance on [sorting](common-getstarted.html#sorting)
    in: query
    name: sort-by
    type: string
    x-asee-common: true
  include-param:
    description: List of fields to include in response. For more information see general guidance on [response shaping](common-getstarted.html#shaping)
    in: query
    name: include
    type: array
    items:
      type: string
    collectionFormat: csv
    x-asee-common: true
  trim-param:
    description: List of fields to trim from response. For more information see general guidance on [response shaping](common-getstarted.html#shaping)
    in: query
    name: trim
    type: array
    items:
      type: string
    collectionFormat: csv
    x-asee-common: true
  date-param:
    description: Date for which list of rates is effective
    in: path
    name: date
    required: true
    type: string
    format: date
  list-kinds-param:
    name: list-kinds
    description: "Literal that uniquely identifies intended usage of exchange rate list. Common values are `cash`, `forex`. For a complete list of values see classification [exchange-rate-list-kind](exchange-classifications.html#exchange-rate-list-kind)"
    type: array
    in: query
    items:
      type: string
    collectionFormat: csv
  currencies-param:
    description: |
      List of currencies of interest to filter the response. If empty or not present it is interpretted that all currencies are interesting. List of currencies is maintained in [Reference API](reference-getstarted.html).
    in: query
    name: currencies
    required: false
    collectionFormat: csv
    items:
      type: string
    type: array
  from-date-param:
    name: from-date
    description: "Earliest date (inclusive) for period of interest in ISO 8601 format. If omitted it is assumed to be one year earlier from `latest-date`."
    type: string
    format: date
    in: query
    minLength: 10
    maxLength: 10
  to-date-param:
    name: to-date
    description: "Latest date (inclusive) for period of interest in ISO 8601 format. If present must be greater or equal to `from-date`. If omitted today is assumed as latest date."
    type: string
    format: date
    in: query
    minLength: 10
    maxLength: 10
  statuses-param:
    description: |
      Statuses of interest for exchange orders
      For a list of possible values see [order-statuses](exchange-classifications.html#order-statuses) enumeration.
    in: query
    name: statuses
    required: false
    collectionFormat: csv
    enum:
      - executed
      - pending
      - rejected
    items:
      type: string
    type: array
  from-amount-param:
    description: Lower limit for amounts that will be included in the result.
    in: query
    name: from-amount
    required: false
    format: double
    type: number
  to-amount-param:
    description: Top limit for amounts that will be included in the result.
    in: query
    name: to-amount
    required: false
    format: double
    type: number
  directions-param:
    description: |
      Direction of currency exchange.
      For a list of possible values see [exchange-directions](exchange-classifications.html#exchange-directions) enumeration.
    in: query
    name: directions
    required: false
    type: array
    collectionFormat: csv
    items:
      type: string
    enum:
      - purchase
      - sell
  order-id-param:
    description: Unique identifier of currency exchange order
    in: path
    name: order-id
    required: true
    type: string
  customer-id-param:
    description: Identifier of the customer who initiated the currency exchange order
    name: customer-id
    type: string
    in: query
definitions:
  exchange-rate-lists:
    type: object
    allOf:
    - $ref: '#/definitions/paged-list'
    properties:
      lists:
        type: array
        description: Exchange rates lists that match criteria
        items:
          $ref: '#/definitions/list-info'
    example:
      total-count: 68
      page-size: 10
      page: 1
      total-pages: 7
      sort-order: desc
      sort-by: date
      items:
        - effective-from: '2016-01-01'
          list-kind: cash
          list-number: 1
          currency-count: 12
        - effective-from: '2016-01-02'
          list-kind: cash
          list-number: 2
          currency-count: 12
  list-info:
    type: object
    properties:
      effective-from:
        description: Date and time from which rates on the list are effective. Lists are usualy effective until next list of same kind is published.
        format: date-time
        type: string
      list-kind:
        description: "Classification that explains intended usage of rates. Common values are foreign-cash, foreign-exchange. For a complete list of values see classification [exchange-list-kind](exchange-classifications.html#exchange-list-kind)"
        type: string
      list-number:
        description: Ordinal number of the published list within a year
        format: int32
        type: integer
      currency-count:
        type: integer
        description: Number of currencies for which rates are published
        format: int32
    example:
      effective-from: '2016-01-01'
      list-kind: cash
      list-number: 1
      currency-count: 3
  exchange-rate-list:
    description: List of exchange rates
    properties:
      info:
        $ref: '#/definitions/list-info'
      currencies:
        description: List of currency exchange rates.
        items:
          $ref: '#/definitions/currency-rate'
        type: array
    type: object
    example:
      info:
        effective-from: '2016-01-01'
        list-kind: cash
        list-number: 1
        currency-count: 3
      currencies:
        -
          currency: EUR
          code: "978"
          unit: 1
          mid: 122.9873
          buy: 122.5432
          sell: 123.2353
        -
          currency: USD
          code: "840"
          unit: 1
          mid: 110.9873
          buy: 110.5432
          sell: 111.2353
        -
          currency: CHF
          code: "756"
          unit: 1
          mid: 112.9873
          buy: 112.5432
          sell: 113.2353
  rate-list:
    type: object
    description: List of rate records
    allOf:
    - $ref: '#/definitions/paged-list'
    properties:
      rates:
        type: array
        description: List of rate records
        items:
          $ref: '#/definitions/rate-record'
    example:
      total-count: 68
      page-size: 10
      page: 1
      total-pages: 7
      sort-order: desc
      sort-by: effective-date
      items:
        - effective-date: '2016-01-01'
          list-kind: cash
          rate:
            currency: EUR
            code: "978"
            unit: 1
            mid: 122.9873
            buy: 122.5432
            sell: 123.2353
        - effective-date: '2016-01-01'
          list-kind: forex
          rate:
            currency: EUR
            code: "978"
            unit: 1
            mid: 122.9873
            buy: 122.5432
            sell: 123.2353
  rate-record:
    type: object
    description: Record of a currency exchange rate
    properties:
      effective-date:
        description: Date for which rate is effective
        format: date
        type: string
      list-kind:
        description: "Classification that explains list publisher's intended usage of rates. Common values are cash, forex, cb. For a complete list of values see classification [exchange-list-kind](exchange-classifications.html#exchange-list-kind)"
        type: string
      currency:
        $ref: '#/definitions/currency-rate'
  currency-rate:
    description: |
      Currency exchange rate contains details about one foreign and local currency rates. This includes info such as
      buy, sell and middle rate.
    example:
      currency: EUR
      code: "978"
      unit: 1
      mid: 122.9873
      buy: 122.5432
      sell: 123.2353
    properties:
      currency:
        description: "ISO 4217 3 letter currency code"
        type: string
        minLength: 3
        maxLength: 3
      code:
        description: "Numeric country code according to ISO 3166-1"
        type: string
        minLength: 3
        maxLength: 3
      unit:
        description: "Unit of exchanged currency in converstion with base currency (1 or 100)"
        format: double
        type: number
      mid:
        description: Middle rate
        format: double
        type: number
      buy:
        description: Buying rate
        format: double
        type: number
      sell:
        description: Selling rate
        format: double
        type: number
    type: object
  request-offer-command:
    type: object
    description: Details of currency exchange deal for which an offer is asked
    example:
      customer-id: NODJO001
      debited-account: 115-0000000050378-56
      credited-account: 115-1000100019578-10
      foreign-currency:
        code: EUR
        amount: 100
      direction: purchase
    properties:
      customer-id:
        description: Identifier of the customer for which the offer is requested
        type: string
      debited-account:
        description: Source account number.
        type: string
      credited-account:
        description: Destination account number.
        type: string
      foreign-currency:
        $ref: '#/definitions/currency'
      direction:
        description: |
          Kind of currency exchange offer that is requested. Offer to `purchase` or `sell` foreign currency from the perspective of bank.
          For a list of possible values see [exchange-directions](exchange-classifications.html#exchange-directions) enumeration.
        enum:
          - purchase
          - sell
        type: string
  currency:
    description: Currency amount and code
    type: object
    required:
      - amount
      - code
    example:
      amount: 200.00
      code: EUR
    properties:
      amount:
        description: Amount
        format: double
        type: number
        minimum: 0
      code:
        description: ISO 4217 3 letter currency code
        type: string
        minLength: 3
        maxLength: 3
  offer:
    type: object
    description: Currency exchange offer shows details about particular transaction which is about to be realised.
    example:
      offer-id: '463'
      customer-id: 'NODJO001'
      valid-until: '2016-01-01T21:00:00'
      direction: purchase
      foreign-currency: CHF
      rate: 115.7505
      amount: 1000.00
      local-amount: 115750.50
      echange-fee:
        code: RSD
        amount: 11.57
    properties:
      offer-id:
        description: Unique identifier of the offer
        type: string
      customer-id:
        description: Identifier of the customer for which the offer is requested
        type: string
      valid-untill:
        description: Time and date untill this offer is valid
        type: string
        format: date-time
      direction:
        description: |
          Kind of currency exchange that is offered. Offer to `purchase` or `sell` foreign currency from the perspective of bank.
          For a list of possible values see [exchange-directions](exchange-classifications.html#exchange-directions) enumeration.
        enum:
          - purchase
          - sell
        type: string
      foreign-currency:
        description: ISO 4217 3 letter currency code
        type: string
        minLength: 3
        maxLength: 3
      rate:
        description: Offered exchange rate
        format: double
        type: number
      amount:
        description: Offered amount in foreign currency
        format: double
        type: number
      local-amount:
        description: Offered amount in local currency
        format: double
        type: number
      exchange-fee:
        description: Fee that will be charged for exchange transaction
        $ref: '#/definitions/currency'
  exchange-order-list:
    description: List of currency exchange transactions.
    allOf:
    - $ref: '#/definitions/paged-list'
    properties:
      orders:
        description: Transactions list.
        items:
          $ref: '#/definitions/exchange-order'
        type: array
    type: object
    example:
      total-count: 68
      page-size: 10
      page: 1
      total-pages: 7
      sort-order: desc
      sort-by: 'effective-date'
      orders:
        - order-id: '99900155236001'
          customer-id: 'NODJO001'
          credited-account: '115-0000000050378-56'
          debited-account: '115-1000100019578-10'
          foreign-currency:
            code: EUR
            amount: 100.00
          direction: purchase
          offer-id: '463'
          status: executed
          status-date: '2015-11-09T10:51:05'
  exchange-order:
    description: Details of currency exchange transaction.
    type: object
    required:
      - order-id
      - customer-id
      - debited-account
      - credited-account
      - foreign-currency
      - direction
      - status
      - status-date
    example:
      order-id: '99900155236001'
      customer-id: 'NODJO001'
      credited-account: '115-0000000050378-56'
      debited-account: '115-1000100019578-10'
      foreign-currency:
        code: EUR
        amount: 100.00
      direction: purchase
      offer-id: '463'
      status: executed
      status-date: '2015-11-09T10:51:05'
    properties:
      order-id:
        description: Unique identifier of exchange order
        type: string
      customer-id:
        description: Identifier of the customer who initiated the currency exchange order
        type: string
      debited-account:
        description: Identifier (account number) of account debited in currency exchange
        type: string
      credited-account:
        description: Identifier (account number) of account credited in currency exchange
        type: string
      foreign-currency:
        $ref: '#/definitions/currency'
      direction:
        type: string
        description: |
          Kind of currency exchange offer that is requested. Offer to `purchase` or `sell` foreign currency from the perspective of bank.
          For a list of possible values see [exchange-directions](exchange-classifications.html#exchange-directions) enumeration.
        enum:
          - purchase
          - sell
      offer-id:
        description: Unique identifier of currency exchange offer
        type: string
      status:
        description: |
          Enumeration that explain possible statuses of exchange order
          For a list of possible values see [order-statuses](exchange-classifications.html#order-statuses) enumeration.
        type: string
        enum:
          - pending
          - executed
          - rejected
      status-date:
        description: Date and time when status was changed
        format: date-time
        type: string
  initiate-order-command:
    description: Command for initiating currency-exchange transaction
    type: object
    required:
      - customer-id
      - debited-account
      - credited-account
      - foreign-currency
      - direction
    properties:
      customer-id:
        description: Identifier of the customer who initiated the currency exchange order
        type: string
      debited-account:
        description: Identifier (account number) of account debited in currency exchange
        type: string
      credited-account:
        description: Identifier (account number) of account credited in currency exchange
        type: string
      foreign-currency:
        $ref: '#/definitions/currency'
      direction:
        description: |
          Kind of currency exchange offer that is requested. Offer to `purchase` or `sell` foreign currency from the perspective of bank.
          For a list of possible values see [exchange-directions](exchange-classifications.html#exchange-directions) enumeration.
        enum:
          - purchase
          - sell
        type: string
      offer-id:
        description: Unique identifier of currency exchange offer
        type: string
    example:
      customer-id: 'NODJO001'
      credited-account: '115-0000000050378-56'
      debited-account: '115-1000100019578-10'
      foreign-currency:
        code: EUR
        amount: 100.00
      direction: purchase
      offer-id: '463'
  validate-order-request:
    description: Request to validate currency exchange order
    type: object
    allOf:
      - $ref: '#/definitions/initiate-order-command'

# ****************************************************#
# MODELS COMMON WITH OTHER APIs                       #
# ****************************************************#
 
  validation-problem:
    description: Details of failed validation
    properties:
      errors:
        description: List of validation errors
        type: array
        items:
          type: object
          properties:
            tag:
              description: Name of input element (field or parameter) that is in invalid. If missing or null it is interpreted that validation error refers to entire request rather than to specific element. 
              type: string          
            error:
              description: Unique literal that identifies kind of validation error               
              type: string
            message:
              description: Message that explains failed validation. To support translation message may embed variable parameters in curly brackets. 
              type: string
    example:
      errors:
        -
          tag: phone-number
          error: invalid-format
          message: Format for this field is invalid
        -
          tag: phone-number        
          error: max-length
          message: Content exceeds maximum alowed length 
        -
          tag: account-number
          error: check-digit-invalid
          message: Check digit is invalid for this field
          
  business-problem:
    description: Details on specific problem that prevented processing after successfull validation
    type: object
    example:
      problem: document-locked
      message: Document you are trying to access is locked by another user
      details: User john.doe has locked the document
    properties:
      problem:
        description: Unique literal that identifies specific problem
        type: string
      message:
        description: Message explaining the situation and optionaly remedies
        type: string
      details:
        description: Optional details supplied for troubleshooting
        type: string
  paged-list:
    description: List with support for paging
    properties:
      total-count:
        description: Total number of items in collection
        type: integer
      page-size:
        description: Size of the page
        type: integer
      page:
        description: Index of current page
        type: integer
      total-pages:
        description: Total number of pages of set size
        type: integer
      sort-order:
        description: Sort order (`asc` or `desc`). Default is asc
        type: string
        enum:
        - asc
        - desc
      sort-by:
        description: Attribute of the collection item to sort by
        type: string
  classification-value:
    type: object
    description: Classification value
    properties:
      literal:
        description: Literal that uniquely identifies classification value
        type: string
      code:
        description: Optional numerical code of classification value
        type: string
      description:
        description: Description of classification value
        type: string
      parent-literal:
        description: Optional literal of parent classification value if schema is hierarchical
        type: string
    example:
      literal: billing
      code: "2"
      description: Contact may be used to provide party with details of their liabilities to the bank
  classification-list:
    description: List of classification schemas
    type: object
    properties:
      items:
        description: List of classification schemas
        items:
          $ref: "#/definitions/classification-info"
        type: array
    example:
      -
        schema-id: filing-purpose
        name: Filing Purpose
        description: List of possible uses of document in business context. Commonly used filing purposes are document, customer-picture
      -
        schema-id: folder-purpose
        name: Folder Purpose
        description: List of possible uses of a folder in business context.
  classification-info:
    description: Basic information on classification schema
    properties:
      schema-id:
        type: string
        description: Unique literal that identifies the classification schema. Always in `lowercase-dash` convention.
      name:
        type: string
        description: User friendly name of classification
      description:
        type: string
        description: Description of a classification
    example:
      schema-id: filing-purpose
      name: Filing Purpose
      description: List of possible uses of document in business context. Commonly used filing purposes are document, customer-picture
  classification:
    type: object
    description: Classification schema details
    properties:
      schema-id:
        type: string
        description: Unique literal that identifies the classification schema. Always in `lowercase-dash` convention.
      name:
        type: string
        description: User friendly name of classification
      description:
        type: string
        description: Description of a classification
      values:
        description: List of allowed classification values
        type: array
        items:
          $ref: "#/definitions/classification-value"
    example:
      schema-id: contact-purpose
      name: Contact Purpose
      description: List of possible uses of contact in business context. Commonly used filing purposes are billing, marketing
      values:
        - literal: billing
          code: "1"
          description: Contact may be used to provide party with details of their liabilities to the bank
        - literal: marketing
          code: "2"
          description: Contact may be used to provide party with details of offers
        - literal: reporting
          code: "3"
          description: Contact may be used to provide party with reports on their account
  resource-created-result:
    description: Unique identifier of newly created resource that can be used in future inquires and commands
    type: string
    example: Created
responses:
  default-error-response:
    description: Besides specific status codes above, other standard http [status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) can be returned for each request. To learn more see general guidance on [error handling](common-getstarted.html#error-handling)
  validation-problem-response:
    description: Your request was not constructed properly. Response contains the list of validation errors for each invalid element of your request. For complete list of possible validation errors see [validation](common-getstarted.html#validation) section of the guide.
    schema:
      $ref: '#/definitions/validation-problem'
